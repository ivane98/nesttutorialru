generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id String @id @default(uuid())

  title       String
  description String?
  releaseYear Int     @map("release_year")
  rating      Float   @default(0.0)
  isAvailable Boolean @default(false) @map("is_available")

  reviews Review[]

  actors Actor[]

  poster MoviePoster? @relation(fields: [moviePosterId], references: [id])

  genre Genre @default(DRAMA)

  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt() @map("updated_at")
  MoviePoster   MoviePoster[] @relation("movie_posters")
  moviePosterId String?

  @@index([releaseYear, title])
  @@map("movies")
}

model MoviePoster {
  id String @id @default(uuid())

  name String

  movie    Movie  @relation("movie_posters", fields: [movie_id], references: [id])
  movie_id String

  movies Movie[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  @@map("movie_posters")
}

model Actor {
  id String @id @default(uuid())

  name String

  movies Movie[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  @@map("actors")
}

model Review {
  id String @id @default(uuid())

  text   String
  rating Decimal @default(0.0)

  movies   Movie  @relation(fields: [movie_id], references: [id])
  movie_id String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  @@map("reviews")
}

enum Genre {
  ACTION
  DRAMA
  COMEDY
  HORROR

  @@map("enum_genres")
}
